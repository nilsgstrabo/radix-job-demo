/*
 * Radix job scheduler server.
 *
 * This is the API Server for the Radix job scheduler server.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = RadixJobClient.Client.OpenAPIDateConverter;

namespace RadixJobClient.Model
{
    /// <summary>
    /// FailurePolicy
    /// </summary>
    [DataContract(Name = "FailurePolicy")]
    public partial class FailurePolicy : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FailurePolicy" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FailurePolicy() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FailurePolicy" /> class.
        /// </summary>
        /// <param name="rules">A list of failure policy rules. The rules are evaluated in order. Once a rule matches a job replica failure, the remaining of the rules are ignored. When no rule matches the failure, the default handling applies - the counter of failures is incremented and it is checked against the backoffLimit. (required).</param>
        public FailurePolicy(List<FailurePolicyRule> rules = default(List<FailurePolicyRule>))
        {
            // to ensure "rules" is required (not null)
            if (rules == null)
            {
                throw new ArgumentNullException("rules is a required property for FailurePolicy and cannot be null");
            }
            this.Rules = rules;
        }

        /// <summary>
        /// A list of failure policy rules. The rules are evaluated in order. Once a rule matches a job replica failure, the remaining of the rules are ignored. When no rule matches the failure, the default handling applies - the counter of failures is incremented and it is checked against the backoffLimit.
        /// </summary>
        /// <value>A list of failure policy rules. The rules are evaluated in order. Once a rule matches a job replica failure, the remaining of the rules are ignored. When no rule matches the failure, the default handling applies - the counter of failures is incremented and it is checked against the backoffLimit.</value>
        [DataMember(Name = "rules", IsRequired = true, EmitDefaultValue = true)]
        public List<FailurePolicyRule> Rules { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FailurePolicy {\n");
            sb.Append("  Rules: ").Append(Rules).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

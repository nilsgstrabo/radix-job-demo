/*
 * Radix job scheduler server.
 *
 * This is the API Server for the Radix job scheduler server.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using RadixJobServer.Attributes;
using RadixJobServer.Models;

namespace RadixJobServer.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class JobApiController : ControllerBase
    { 
        /// <summary>
        /// Create job
        /// </summary>
        /// <param name="jobCreation">Job to create</param>
        /// <response code="200">Successful create job</response>
        /// <response code="400">Bad request</response>
        /// <response code="404">Not found</response>
        /// <response code="422">Invalid data in request</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/api/v1/jobs")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateJob")]
        [SwaggerResponse(statusCode: 200, type: typeof(JobStatus), description: "Successful create job")]
        [SwaggerResponse(statusCode: 400, type: typeof(Status), description: "Bad request")]
        [SwaggerResponse(statusCode: 404, type: typeof(Status), description: "Not found")]
        [SwaggerResponse(statusCode: 422, type: typeof(Status), description: "Invalid data in request")]
        [SwaggerResponse(statusCode: 500, type: typeof(Status), description: "Internal server error")]
        public virtual IActionResult CreateJob([FromBody]JobScheduleDescription jobCreation)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(JobStatus));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Status));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Status));
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(Status));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Status));
            string exampleJson = null;
            exampleJson = "{\n  \"batchName\" : \"'batch1'\",\n  \"jobId\" : \"'job1'\",\n  \"created\" : \"2006-01-02T15:04:05Z\",\n  \"ended\" : \"2006-01-02T15:04:05Z\",\n  \"name\" : \"calculator\",\n  \"started\" : \"2006-01-02T15:04:05Z\",\n  \"message\" : \"\\"Error occurred\\"\",\n  \"status\" : \"Waiting\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<JobStatus>(exampleJson)
            : default(JobStatus);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete job
        /// </summary>
        /// <param name="jobName">Name of job</param>
        /// <response code="200">Successful delete job</response>
        /// <response code="404">Not found</response>
        /// <response code="500">Internal server error</response>
        [HttpDelete]
        [Route("/api/v1/jobs/{jobName}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteJob")]
        [SwaggerResponse(statusCode: 200, type: typeof(Status), description: "Successful delete job")]
        [SwaggerResponse(statusCode: 404, type: typeof(Status), description: "Not found")]
        [SwaggerResponse(statusCode: 500, type: typeof(Status), description: "Internal server error")]
        public virtual IActionResult DeleteJob([FromRoute (Name = "jobName")][Required]string jobName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Status));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Status));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Status));
            string exampleJson = null;
            exampleJson = "{\n  \"reason\" : \"reason\",\n  \"code\" : 404,\n  \"message\" : \"job job123 is not found\",\n  \"status\" : \"Failure\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Status>(exampleJson)
            : default(Status);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets job
        /// </summary>
        /// <param name="jobName">Name of job</param>
        /// <response code="200">Successful get job</response>
        /// <response code="404">Not found</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/api/v1/jobs/{jobName}")]
        [ValidateModelState]
        [SwaggerOperation("GetJob")]
        [SwaggerResponse(statusCode: 200, type: typeof(JobStatus), description: "Successful get job")]
        [SwaggerResponse(statusCode: 404, type: typeof(Status), description: "Not found")]
        [SwaggerResponse(statusCode: 500, type: typeof(Status), description: "Internal server error")]
        public virtual IActionResult GetJob([FromRoute (Name = "jobName")][Required]string jobName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(JobStatus));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Status));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Status));
            string exampleJson = null;
            exampleJson = "{\n  \"batchName\" : \"'batch1'\",\n  \"jobId\" : \"'job1'\",\n  \"created\" : \"2006-01-02T15:04:05Z\",\n  \"ended\" : \"2006-01-02T15:04:05Z\",\n  \"name\" : \"calculator\",\n  \"started\" : \"2006-01-02T15:04:05Z\",\n  \"message\" : \"\\"Error occurred\\"\",\n  \"status\" : \"Waiting\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<JobStatus>(exampleJson)
            : default(JobStatus);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Gets jobs
        /// </summary>
        /// <response code="200">Successful get jobs</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/api/v1/jobs/")]
        [ValidateModelState]
        [SwaggerOperation("GetJobs")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<JobStatus>), description: "Successful get jobs")]
        [SwaggerResponse(statusCode: 500, type: typeof(Status), description: "Internal server error")]
        public virtual IActionResult GetJobs()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<JobStatus>));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Status));
            string exampleJson = null;
            exampleJson = "{\n  \"batchName\" : \"'batch1'\",\n  \"jobId\" : \"'job1'\",\n  \"created\" : \"2006-01-02T15:04:05Z\",\n  \"ended\" : \"2006-01-02T15:04:05Z\",\n  \"name\" : \"calculator\",\n  \"started\" : \"2006-01-02T15:04:05Z\",\n  \"message\" : \"\\"Error occurred\\"\",\n  \"status\" : \"Waiting\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<JobStatus>>(exampleJson)
            : default(List<JobStatus>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Stop job
        /// </summary>
        /// <param name="jobName">Name of job</param>
        /// <response code="200">Successful delete job</response>
        /// <response code="404">Not found</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/api/v1/jobs/{jobName}/stop")]
        [ValidateModelState]
        [SwaggerOperation("StopJob")]
        [SwaggerResponse(statusCode: 200, type: typeof(Status), description: "Successful delete job")]
        [SwaggerResponse(statusCode: 404, type: typeof(Status), description: "Not found")]
        [SwaggerResponse(statusCode: 500, type: typeof(Status), description: "Internal server error")]
        public virtual IActionResult StopJob([FromRoute (Name = "jobName")][Required]string jobName)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Status));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Status));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Status));
            string exampleJson = null;
            exampleJson = "{\n  \"reason\" : \"reason\",\n  \"code\" : 404,\n  \"message\" : \"job job123 is not found\",\n  \"status\" : \"Failure\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Status>(exampleJson)
            : default(Status);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}

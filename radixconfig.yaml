apiVersion: radix.equinor.com/v1
kind: RadixApplication
metadata:
  name: radix-job-demo
spec:
  privateImageHubs:
    radixcanary.azurecr.io:
      username: 814607e6-3d71-44a7-8476-50e8b281abbc
  dnsAppAlias:
    environment: qa
    component: server
  environments:
    - name: qa
      build:
        from: main
    - name: prod
      build:
        from: release
  jobs:
    - name: "compute"
      src: "compute"
      schedulerPort: 8080
      timeLimitSeconds: 3600
      backoffLimit: 0
      notifications:
        webhook: http://server:6001/api/notification/compute1
      readOnlyFileSystem: true
      ports:
        - name: http
          port: 9999
        - name: metrics2
          port: 9090
      monitoringConfig:
        portName: metrics2
      payload:
        path: "/" # "/compute/args"
      identity:
        azure:
          clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
      variables:
        COMPUTE_CONFIG: "/compute/args/payload"
        CALLBACK_ON_COMPLETE_URL: "http://server:5000"
        SQL_SERVER_NAME: "fed-test.database.windows.net"
        SQL_DATABASE_NAME: "fed-test"
      environmentConfig:
        - environment: prod
          identity:
            azure:
              clientId: b96d264b-7053-4465-a4a7-32be5b0fec49
        - environment: qa
          monitoring: true
          backoffLimit: 0
          useReadOnlyFileSystem: true
    - name: "compute1"
      src: "compute"
      schedulerPort: 8080
      timeLimitSeconds: 3600
      backoffLimit: 0
      notifications:
        webhook: http://server:6001/api/notification/compute1
      readOnlyFileSystem: true
      ports:
        - name: http
          port: 9999
        - name: metrics2
          port: 9090
      monitoringConfig:
        portName: metrics2
      payload:
        path: "/compute/args"
      identity:
        azure:
          clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
      variables:
        COMPUTE_CONFIG: "/compute/args/payload"
        CALLBACK_ON_COMPLETE_URL: "http://server:5000"
        SQL_SERVER_NAME: "fed-test.database.windows.net"
        SQL_DATABASE_NAME: "fed-test"
      environmentConfig:
        - environment: prod
          identity:
            azure:
              clientId: b96d264b-7053-4465-a4a7-32be5b0fec49
        - environment: qa
          monitoring: true
          backoffLimit: 0
    - name: "compute2"
      image: radixdev.azurecr.io/pointilla:latest
      schedulerPort: 8080
      timeLimitSeconds: 300
      backoffLimit: 0
      payload:
        path: "/compute/args"
      identity:
        azure:
          clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
      variables:
        MAX_DISTANCE_CHANGEDETECTION: "0.4"
        MAX_THREADCOUNT: "8"
        MIN_FILTER_RGB_VALUE: "0.1"
        MAX_FILTER_RGB_VALUE: "10"
  components:
    - name: echo
      src: echoweb
      dockerfileName: Dockerfile
      ports:
        - name: http
          port: 8000
      publicPort: http
      readOnlyFileSystem: true
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
        limits:
          cpu: 10m
          memory: 10Mi
    - name: "server"
      src: src
      dockerfileName: Dockerfile.frontend
      ports:
        - name: http
          port: 5000
        - name: notif1
          port: 6001
        - name: notif2
          port: 6002
      publicPort: http
      readOnlyFileSystem: true
      variables:
        ASPNETCORE_URLS: "http://*:5000;http://*:6001;http://*:6002"
        JOB_SCHEDULER: "http://compute:8080"
        JOB_SCHEDULER2: "http://compute2:8080"
        COMPUTE_IMAGE_PATH: "/app/computeimages"
        DOTNET_EnableDiagnostics: "0"
      identity:
        azure:
          clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
      authentication:
        oauth2:
          clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
          scope: openid email profile offline_access
          sessionStoreType: redis
          redisStore:
            connectionUrl: redis://redis:6379
      ingressConfiguration:
        - stickysessions
      resources:
        requests:
          memory: "200M"
          cpu: "50m"
        limits:
          memory: "500M"
      volumeMounts:
        - name: computeimages
          path: /app/computeimages
          emptyDir:
            sizeLimit: 50M
    - name: redis
      image: bitnami/redis:{imageTagName}
      environmentConfig:
        - environment: qa
          imageTagName: "7.2"          
        - environment: prod
          imageTagName: "7.0"
      alwaysPullImageOnDeploy: true
      ports:
        - name: redis
          port: 6379
      secrets:
        - REDIS_PASSWORD
      resources:
        requests:
          memory: "100M"
          cpu: "50m"
        limits:
          memory: "200M"


apiVersion: radix.equinor.com/v1
kind: RadixApplication
metadata:
  name: radix-job-demo
spec:
  dnsAppAlias:
    environment: qa
    component: server
  environments:
    - name: qa
      build:
        from: main
  jobs:
    - name: "compute"
      src: "compute"
      schedulerPort: 8080
      # timeLimitSeconds: 30
      # node:
      #   gpu: nvidia-v100
      #   gpuCount: 1
      ports:
        - name: http
          port: 9999
      payload:
        path: "/compute/args"
      variables:
        COMPUTE_CONFIG: "/compute/args/payload"
        CALLBACK_ON_COMPLETE_URL: "http://server:5005"
      secrets:
        - ANY_SECRET
      environmentConfig:
        - environment: qa
          resources:
            requests:
              memory: "100M"
              cpu: "50m"
            limits:
              memory: "500M"
              cpu: "500m"
  components:
    - name: "server"
      dockerfileName: Dockerfile.frontend
      variables:
        ASPNETCORE_URLS: "http://*:5005"
        JOB_SCHEDULER: "http://compute:8080"
        COMPUTE_IMAGE_PATH: "/app/computeimages"
      environmentConfig:
        - environment: qa
          replicas: 1
          authentication:
            oauth2:
              clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
              scope: openid email #email profile offline_access
              sessionStoreType: redis
              redisStore:
                connectionUrl: redis://redis:6379
      ports:
        - name: http
          port: 5005
      publicPort: http
      # ingressConfiguration:
      #   - websocketfriendly
      resources:
        requests:
          memory: "200M"
          cpu: "50m"
        limits:
          memory: "500M"
          cpu: "500m"
      
    - name: redis
      image: bitnami/redis:6.2
      alwaysPullImageOnDeploy: true
      ports:
        - name: redis
          port: 6379
      secrets:
        - REDIS_PASSWORD
      resources:
        requests:
          memory: "100M"
          cpu: "50m"
        limits:
          memory: "200M"
          cpu: "100m"
  #   - name: serverprivate
  #     image: nilsgustavstrabo/privatefrontend:latest
  #     alwaysPullImageOnDeploy: true
  #     variables:
  #       ASPNETCORE_URLS: "http://*:5005"
  #       JOB_SCHEDULER: "http://compute:8080"
  #       COMPUTE_IMAGE_PATH: "/app/computeimages"
  #     environmentConfig:
  #       - environment: qa
  #         authentication:
  #           oauth2:
  #             clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
  #             scope: openid email profile offline_access
  #             sessionStoreType: redis
  #             redisStore:
  #               connectionUrl: redis://redis:6379
  #     ports:
  #       - name: http
  #         port: 5005
  #     publicPort: http
  #     ingressConfiguration:
  #       - websocketfriendly
  #     resources:
  #       requests:
  #         memory: "200M"
  #         cpu: "50m"
  #       limits:
  #         memory: "500M"
  #         cpu: "500m"
  # privateImageHubs:
  #   docker.io:
  #     username: nilsgustavstrabo
  #     email: nilsgustav.straabo@gmail.com

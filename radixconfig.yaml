apiVersion: radix.equinor.com/v1
kind: RadixApplication
metadata:
  name: radix-job-demo
spec:
  dnsExternalAlias:
    - alias: jobdemo.example.com
      environment: qa
      component: server
  build:
    secrets:
      - A_BUILD_SECRET
  dnsAppAlias:
    environment: qa
    component: server
  environments:
    - name: qa
      build:
        from: main
    - name: dev
      build:
        from: upgrade-angular
    # - name: prod
  jobs:
    - name: "compute"
      src: "compute"
      schedulerPort: 8080
      # timeLimitSeconds: 60
      ports:
        - name: http
          port: 9999
      payload:
        path: "/compute/args"
      identity:
        azure:
          # clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6 # app registration
          clientId: b96d264b-7053-4465-a4a7-32be5b0fec49
      variables:
        COMPUTE_CONFIG: "/compute/args/payload"
        CALLBACK_ON_COMPLETE_URL: "http://server:5005"
        SQL_SERVER_NAME: "fed-test.database.windows.net"
        SQL_DATABASE_NAME: "fed-test"

  components:
    - name: "server"
      dockerfileName: Dockerfile.frontend
      identity:
        azure:
          clientId: b96d264b-7053-4465-a4a7-32be5b0fec49 # user assigned managed identity
      variables:
        ASPNETCORE_URLS: "http://*:5005"
        JOB_SCHEDULER: "http://compute:8080"
        COMPUTE_IMAGE_PATH: "/app/computeimages"
      # secrets:
      #   - A_RUNTIME_SECRET
      # secretRefs:
      #   azureKeyVaults:
      #     - name: radix-sci-az-kv-test
      #       path: /mnt/secrets
      #       items:
      #         - name: connection-string-prod
      #           envVar: CONNECTION_STRING
      #         - name: secret1
      #           envVar: SECRET1
      #         - name: secret2
      #           envVar: SECRET2
      authentication:
        oauth2:
          clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6
          scope: openid email profile offline_access
          sessionStoreType: redis
          redisStore:
            connectionUrl: redis://redis:6379
      ports:
        - name: http
          port: 5005
      publicPort: http
      resources:
        requests:
          memory: "202M"
          cpu: "50m"
        limits:
          memory: "500M"
          cpu: "500m"
      # environmentConfig:
      #   - environment: qa
      #     volumeMounts:
      #       - type: azure-blob
      #         name: images
      #         storage: jobdemo
      #         path: /mnt/image-storage
    - name: redis
      image: bitnami/redis:6.2
      alwaysPullImageOnDeploy: true
      ports:
        - name: redis
          port: 6379
      secrets:
        - REDIS_PASSWORD
      resources:
        requests:
          memory: "100M"
          cpu: "50m"
        limits:
          memory: "200M"
          cpu: "100m"

